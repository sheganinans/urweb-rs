/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         unknown_lints,
         expl_impl_clone_on_copy)]

pub type uw_Basis_int = ::std::os::raw::c_longlong;
pub type uw_Basis_float = f64;
pub type uw_Basis_string = *mut ::std::os::raw::c_char;
pub type uw_Basis_char = ::std::os::raw::c_char;
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_time {
    pub seconds: ::std::os::raw::c_long,
    pub microseconds: ::std::os::raw::c_uint,
}
impl Clone for uw_Basis_time {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_blob {
    pub size: usize,
    pub data: *mut ::std::os::raw::c_char,
}
impl Clone for uw_Basis_blob {
    fn clone(&self) -> Self { *self }
}
pub type uw_unit = ::std::os::raw::c_int;
pub type uw_Basis_unit = uw_unit;
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum uw_Basis_bool { uw_Basis_False = 0, uw_Basis_True = 1, }
pub type uw_Basis_xhtml = uw_Basis_string;
pub type uw_Basis_page = uw_Basis_string;
pub type uw_Basis_xbody = uw_Basis_string;
pub type uw_Basis_css_class = uw_Basis_string;
pub type uw_Basis_client = ::std::os::raw::c_uint;
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_channel {
    pub cli: ::std::os::raw::c_uint,
    pub chn: ::std::os::raw::c_uint,
}
impl Clone for uw_Basis_channel {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_source {
    pub context: ::std::os::raw::c_int,
    pub source: ::std::os::raw::c_ulonglong,
}
impl Clone for uw_Basis_source {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_file {
    pub name: uw_Basis_string,
    pub type_: uw_Basis_string,
    pub data: uw_Basis_blob,
}
impl Clone for uw_Basis_file {
    fn clone(&self) -> Self { *self }
}
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_postBody {
    pub type_: uw_Basis_string,
    pub data: uw_Basis_string,
    pub len: usize,
}
impl Clone for uw_Basis_postBody {
    fn clone(&self) -> Self { *self }
}
pub type uw_Basis_queryString = uw_Basis_string;
#[repr(C)]
#[derive(Debug, Copy)]
pub struct uw_Basis_postField {
    pub name: uw_Basis_string,
    pub value: uw_Basis_string,
    pub remaining: uw_Basis_string,
}
impl Clone for uw_Basis_postField {
    fn clone(&self) -> Self { *self }
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum failure_kind {
    SUCCESS = 0,
    FATAL = 1,
    BOUNDED_RETRY = 2,
    UNLIMITED_RETRY = 3,
    RETURN_INDIRECTLY = 4,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum request_result { SERVED = 0, KEEP_OPEN = 1, FAILED = 2, }

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct uw_context {
    _unused: [u8; 0],
}

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct input {
    _unused: [u8; 0],
}
pub type uw_input = *mut input;
